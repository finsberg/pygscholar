name: CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pyscholar
      run: |
        python -m pip install -e ".[test]"
    - name: Test with pytest
      run: |
        python -m pytest


    - name: Coverage report
      if: github.ref == 'refs/heads/main' && matrix.python-version == '3.10'
      run: |
        python3 -m coverage report | sed 's/^/    /' >> $GITHUB_STEP_SUMMARY
        python3 -m coverage json
        export TOTAL=$(python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
        echo "total=$TOTAL" >> $GITHUB_ENV

    - name: Upload HTML report.
      uses: actions/upload-artifact@v3
      with:
        name: html-report
        path: htmlcov

    - name: Create coverage Badge
      if: github.ref == 'refs/heads/main'
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 940406238abd82b6ee8ec90abb292247
        filename: pygscholar-badge.json
        label: Coverage
        message: ${{ env.total }}%
        minColorRange: 50
        maxColorRange: 90
        valColorRange: ${{ env.total }}

    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user

    - name: Build a binary wheel and a source tarball
      run: >-
        python3 -m
        build
        --sdist
        --wheel
        --outdir dist/
        .

    - name: Publish distribution ðŸ“¦ to PyPI
      if: startsWith(github.ref, 'refs/tags') && matrix.python-version == '3.10'
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
